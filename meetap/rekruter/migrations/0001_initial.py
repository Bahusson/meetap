# Generated by Django 3.1 on 2020-09-13 13:17

from django.db import migrations, models
import rekruter.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first_name')),
                ('date_joined', models.DateTimeField(null=True, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('role_council', models.PositiveSmallIntegerField(choices=[(1, 'User Regular'), (2, 'User Member'), (3, 'User Council Member'), (4, 'Superuser')], default=1)),
                ('avatar1', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'other'), (1, 'male'), (2, 'female')], null=True)),
                ('age', models.DateField(null=True)),
                ('mnemo_login', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True, verbose_name='mnemo_login')),
                ('experience', models.IntegerField(default=0)),
                ('sex_preference', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Brak'), (1, 'Straight'), (2, 'Gay'), (3, 'Bi'), (4, 'Trans'), (5, 'Other')], null=True)),
                ('other_preference', models.CharField(blank=True, max_length=30, verbose_name='other_preference')),
                ('sex_role_activity', models.PositiveSmallIntegerField(choices=[(0, 'Brak'), (1, 'Pasywny'), (4, 'Raczej Pasywny'), (3, 'Zmienny'), (4, 'Raczej Aktywny'), (5, 'Aktywny')], default=0)),
                ('sex_role_dominance', models.PositiveSmallIntegerField(choices=[(0, 'Brak'), (1, 'Uległy'), (2, 'Raczej Uległy'), (3, 'Neutralny'), (4, 'Raczej Dominujący'), (5, 'Dominujący')], default=0)),
                ('alcohol', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'No drinking'), (1, "Doesn't mind company"), (2, 'Drinks alcohol'), (3, 'Drinks heavily')], null=True)),
                ('tobacco', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'No smoking'), (1, "Doesn't mind company"), (2, 'Smokes sometimes'), (3, 'Smokes heavily')], null=True)),
                ('other_drugs', models.CharField(blank=True, max_length=300, verbose_name='other_drugs')),
                ('telephone', models.CharField(blank=True, max_length=30, verbose_name='telephone')),
                ('other_contact', models.CharField(blank=True, max_length=300, verbose_name='other_contact')),
                ('about_me', models.CharField(blank=True, max_length=1500, verbose_name='about_me')),
                ('interests', models.CharField(blank=True, max_length=500, verbose_name='interests')),
                ('showme_adultcontent', models.BooleanField(default=False, verbose_name='showme_adultcontent')),
                ('showmy_sexorientation', models.BooleanField(default=False, verbose_name='showmy_sexorientation')),
                ('showmy_sexrole', models.BooleanField(default=False, verbose_name='showmy_sexrole')),
                ('showme_commercial', models.BooleanField(default=True, verbose_name='showme_commercial')),
                ('showme_massevents', models.BooleanField(default=True, verbose_name='showme_massevents')),
                ('sendme_inv_status_me', models.BooleanField(default=True, verbose_name='sendme_inv_status_me')),
                ('sendme_inv_status_others', models.BooleanField(default=True, verbose_name='sendme_inv_status_others')),
                ('sendme_invitations', models.BooleanField(default=True, verbose_name='sendme_invitations')),
                ('sendme_friend_events', models.BooleanField(default=True, verbose_name='sendme_invitations')),
                ('sendme_join_request', models.BooleanField(default=True, verbose_name='sendme_invitations')),
                ('avatar2', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('avatar3', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('is_adult', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Małoletni'), (1, 'Niepełnoletni'), (2, 'Pełnoletni')], null=True)),
                ('showme_sexevents', models.BooleanField(default=False, verbose_name='showme_sexevents')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', rekruter.managers.UserManager()),
            ],
        ),
    ]
